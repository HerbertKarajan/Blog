(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{415:function(t,e,s){"use strict";s.r(e);var a=s(1),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_12-cookie、session、token区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-cookie、session、token区别"}},[t._v("#")]),t._v(" 12. Cookie、Session、Token区别")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#http是无状态的协议"}},[t._v("http是无状态的协议")])]),s("li",[s("a",{attrs:{href:"#cookie"}},[t._v("Cookie")])]),s("li",[s("a",{attrs:{href:"#session"}},[t._v("Session")])]),s("li",[s("a",{attrs:{href:"#token"}},[t._v("Token")]),s("ul",[s("li",[s("a",{attrs:{href:"#组成"}},[t._v("组成")])]),s("li",[s("a",{attrs:{href:"#存放"}},[t._v("存放")])]),s("li",[s("a",{attrs:{href:"#认证流程"}},[t._v("认证流程")])])])]),s("li",[s("a",{attrs:{href:"#参考"}},[t._v("参考")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"http是无状态的协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http是无状态的协议"}},[t._v("#")]),t._v(" http是无状态的协议")]),t._v(" "),s("p",[t._v("HTTP是一种不保存状态的，无状态的协议。HTTP协议自身不对请求和响应之间的通信状态进行保存，自身不具备保存之前发送过的请求或响应信息的功能。每当有新的请求发送时，就会有对应的新响应产生。这是为了快速的处理大量事务，确保协议的可伸缩性。")]),t._v(" "),s("p",[t._v("至于为什么HTTP没状态，可能是因为HTTP协议设计时一是为了简单考虑二是早期没考虑到现在web发展需求这个情况。")]),t._v(" "),s("p",[t._v("HTTP/1.1虽然是无状态协议，但为了实现保持状态功能，于是引入了Cookie技术。")]),t._v(" "),s("h2",{attrs:{id:"cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),s("p",[t._v("如果只用Cookie来识别用户状态，那么用户信息会全部保存在客户端，虽然也可以实现服务器识别用户状态，但会造成以下问题：")]),t._v(" "),s("ol",[s("li",[t._v("可能造成CSRF安全问题，一旦数据泄露，那么攻击者就可以伪造用户做一些危险操作。")]),t._v(" "),s("li",[t._v("Cookie只有4k容量，数据量大时可能会造成空间不足，而且网络传输的数据量也会变大。")])]),t._v(" "),s("h2",{attrs:{id:"session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[t._v("#")]),t._v(" Session")]),t._v(" "),s("p",[t._v("因为Cookie非常容易造成安全问题，所以就有了Session+Cookie。过程如下：")]),t._v(" "),s("ol",[s("li",[t._v("客户端登录时发送请求")]),t._v(" "),s("li",[t._v("服务端接收到请求验证登录通过后，建立一个sessionid随机字符串。并在响应头字段Set-Cookie中返回sessionId。Set-Cookie格式如下")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Set-Cookie: sessionId:xxx\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("客户端再次发送请求时浏览器会自动在Cookie中包含sessionid发送到服务端。")]),t._v(" "),s("li",[t._v("服务端接收到请求后对比sessionid，然后获取到用户信息。")])]),t._v(" "),s("p",[t._v("Session只需要在客户端保存一个id，实际上大量数据都是保存在服务端。禁用Cookie后还有其他方法存储，比如放在url中。会出现以下问题：")]),t._v(" "),s("ol",[s("li",[t._v("造成CSRF安全问题")]),t._v(" "),s("li",[t._v("用户信息全部放在服务端会造成服务器压力")])]),t._v(" "),s("h2",{attrs:{id:"token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#token"}},[t._v("#")]),t._v(" Token")]),t._v(" "),s("p",[t._v("因为Session+Cookie的方式会造成安全问题和可能会造成服务器压力过大的问题，就有了token。token 也称作令牌。服务端并不会保存身份认证相关的数据。")]),t._v(" "),s("h3",{attrs:{id:"组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组成"}},[t._v("#")]),t._v(" 组成")]),t._v(" "),s("p",[s("strong",[t._v("uid")]),t._v(": 用户唯一身份标识"),s("br"),t._v(" "),s("strong",[t._v("time")]),t._v(": 当前时间的时间戳"),s("br"),t._v(" "),s("strong",[t._v("sign")]),t._v(": 签名, 使用 hash/encrypt 压缩成定长的十六进制字符串，以防止第三方恶意拼接"),s("br"),t._v(" "),s("strong",[t._v("固定参数")]),t._v("(可选): 将一些常用的固定参数加入到 token 中是为了避免重复查库")]),t._v(" "),s("h3",{attrs:{id:"存放"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存放"}},[t._v("#")]),t._v(" 存放")]),t._v(" "),s("p",[t._v("token在客户端一般存放于localStorage，cookie，或sessionStorage中。在服务器一般存于数据库中。")]),t._v(" "),s("h3",{attrs:{id:"认证流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认证流程"}},[t._v("#")]),t._v(" 认证流程")]),t._v(" "),s("p",[t._v("token 的认证流程与cookie很相似")]),t._v(" "),s("ol",[s("li",[t._v("用户登录，成功后服务器返回Token给客户端。")]),t._v(" "),s("li",[t._v("客户端收到数据后保存在客户端")]),t._v(" "),s("li",[t._v("客户端再次访问服务器，将token放入headers中")]),t._v(" "),s("li",[t._v("服务器端采用filter过滤器校验。校验成功则返回请求数据，校验失败则返回错误码")])]),t._v(" "),s("p",[t._v("token是开发者为了防范csrf而特别设计的令牌，浏览器不会自动添加到headers里，攻击者也无法访问用户的token，所以提交的表单无法通过服务器过滤，也就无法形成攻击。")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000017831088",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000017831088"),s("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);